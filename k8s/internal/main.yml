apiVersion: apps/v1
kind: Deployment
metadata:
  name: $SERVICE_NAME
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      name: $SERVICE_NAME
  template:
    metadata:
      name: $SERVICE_NAME
      labels:
        name: $SERVICE_NAME
    spec:
      containers:
        - name: $SERVICE_NAME
          image: $IMAGE_NAME:$IMAGE_TAG
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 150m
              memory: 100Mi
            limits:
              cpu: 250m
              memory: 200Mi
          livenessProbe:
            httpGet:
              path: $SERVICE_PATH/actuator/info
              port: 8080
              httpHeaders:
                - name: X-Device-ID
                  value: HealthCheck
            initialDelaySeconds: 15
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: $SERVICE_PATH/actuator/health
              port: 8080
              httpHeaders:
                - name: X-Device-ID
                  value: HealthCheck
            initialDelaySeconds: 10
            timeoutSeconds: 1
          ports:
            - name: http
              containerPort: 8080
          envFrom:
            - configMapRef:
                name: $SERVICE_NAME
            - secretRef:
                name: $SERVICE_NAME
      restartPolicy: Always
      imagePullSecrets:
        - name: docker-image-pull-secret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: $SERVICE_NAME
  name: $SERVICE_NAME
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    name: $SERVICE_NAME
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "*"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With, X-RECAPTCHA, X-Api-Key, TimezoneOffset, X-Request-ID, X-Captcha-Token"
  name: $SERVICE_NAME
spec:
  rules:
    - host: $HOST
      http:
        paths:
          - path: $SERVICE_PATH/
            pathType: Prefix
            backend:
              service:
                name: $SERVICE_NAME
                port:
                  number: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: $SERVICE_NAME
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: $SERVICE_NAME
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 75
